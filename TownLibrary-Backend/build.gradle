plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'	// for code coverage

	// This allows the task jacocoTestReport to report all coverage ratios
	// supported by jacoco (it will actually print it out)
	id 'org.barfuin.gradle.jacocolog' version '2.0.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.mockito:mockito-core:2.+'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-params' // for parameterized tests

	// Stuff specific to the local profile -- specified by
	// application-local.properties -- such as:
	// *  using a local in-memory database instead of heroku.
	//
	// Can be launched by using your favorite IDE or by adding
	// `SPRING_PROFILES_ACTIVE=local` before the gradle command:
	// `SPRING_PROFILES_ACTIVE=local ./gradlew test` for example.
	runtimeOnly 'com.h2database:h2:1.4.200'
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport	// auto report coverage after
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.6	// instruction coverage >= 0.6
			}
		}
	}
}
